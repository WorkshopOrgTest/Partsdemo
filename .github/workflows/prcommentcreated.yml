name: PR Checks on PR Comment

on:
  issue_comment:
    types: [created]

jobs: 
  do-stuff-when-pr-commented:        
    if: ${{ github.event.issue.pull_request }}
    name: Run this only when PR is commented
    runs-on: ubuntu-latest
    steps:
      # Get the right ref for the PR. actions/checkout clones the main/master by default
      - name: GitHub API Request
        id: request
        uses: octokit/request-action@v2.0.0
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
      
      - name: Add PR Comment
        uses: mshick/add-pr-comment@v1
        with:
          message: new comment
          repo-token: ${{secrets.GitHub_token}}
    

      - name: Get PR Details
        id: pr_details
        run: |
          echo "::set-output name=pr_merge_sha::${{ fromJson(steps.request.outputs.data).merge_commit_sha }}"
          echo "::set-output name=pr_head_sha::${{ fromJson(steps.request.outputs.data).head.sha }}"
      - name: Set check to pending # You would run your tests before this using the output to set state/desc
        uses: Sibz/github-status-action@v1
        with: 
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'PR Comment Check'
          description: 'This check is in place to do real checking!'
          state: 'pending'
          sha: ${{ steps.pr_details.outputs.pr_head_sha }}

      - name: Checkout the PR Head (or Merge Commit)
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ steps.pr_details.outputs.pr_head_sha }}

      - name: Run your Check here
        id: checkstep
        run: |
          echo "::set-output name=result::success"
          # echo "::set-output name=result::failure"
      - name: Report Status # You would run your tests before this using the output to set state/desc
        uses: Sibz/github-status-action@v1
        with: 
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'PR Comment Check'
          description: 'This check is in place to do real checking!'
          state: ${{ steps.checkstep.outputs.result }}
          sha: ${{ steps.pr_details.outputs.pr_head_sha }}

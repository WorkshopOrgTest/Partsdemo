name: PartsUnlimited
on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  SLN_FILE: PartsUnlimited.sln
  WEB_APP_NAME: partsunlimitted
  PACKAGE_TEMP_PATH: Content\D_C\a\PartsUnlimited\PartsUnlimited\src\PartsUnlimitedWebsite\obj\Release\Package\PackageTmp

jobs:
  BuildTest:
    runs-on: windows-latest
    name: Build and Unit Test
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Setup NuGet.exe for use with actions
      uses: NuGet/setup-nuget@v1.0.5
   
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1
      
    - name: Setup VSTest
      uses: darenm/Setup-VSTest@v1
      
    - name: NuGet restore
      run: nuget restore
        
    - name: Build App
      run: |
        msbuild ${{env.SLN_FILE}} /p:TransformWebConfigEnabled=False /p:AutoParameterizationWebConfigConnectionStrings=False /p:Configuration=Release /p:Platform='Any CPU' /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="${{github.workspace}}\stagingdir"

    - name: Run Unit Test
      run: vstest.console.exe /Platform:x64 PartsUnlimited.UnitTests.dll /ResultsDirectory:"${{github.workspace}}\TestResults"
      working-directory: ${{github.workspace}}\test\PartsUnlimited.UnitTests\bin\Release
    
    - name: Copy Selenium Tests
      shell: pwsh
      working-directory: ${{github.workspace}}/stagingdir
      run: |
        new-item -Path . -Name 'TestAssemblies' -ItemType "directory"
        copy-item -Path ${{github.workspace}}\test\PartsUnlimited.SeleniumTests\bin\Release\* -Destination .\TestAssemblies -Recurse
        
    - name: Publish Build artifact
      uses: actions/upload-artifact@v2
      with:
        name: drop
        path: ${{github.workspace}}/stagingdir

    - name: Upload Unit Testresults
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: UnitTestResults
        path: ${{github.workspace}}\TestResults
    
  Deploy:
    name: Deploy to Azure
    runs-on: windows-latest
    environment:
      name: WEB APP
      url: https://partsunlimitted.azurewebsites.net/
    needs: [BuildTest]
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: drop
          path: ${{github.workspace}}
      - name: Extract Artifact
        run: expand-archive -path '*.zip' -destinationpath '.\webapp'
        shell: pwsh
      - name: Azure WebApp Deploy
        uses: Azure/webapps-deploy@v2
        with:
          app-name: ${{env.WEB_APP_NAME}}
          publish-profile: ${{secrets.WEB_APP_PUBLISH_PROFILE}}
          package: webapp\${{env.PACKAGE_TEMP_PATH}}

  SeleniumTest:
    name: Selenium Tests
    runs-on: windows-latest
    needs: [Deploy]
    steps:
      - name: Setup VSTest
        uses: darenm/Setup-VSTest@v1

      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: drop
          path: ${{github.workspace}}
          
      - run: |
            cd C:/
            dir
          
      - name: Copy file
        uses: canastro/copy-action@0.0.2
        with:
         source: ${{github.workspace}}/TestAssemblies/chromedriver.exe
         target: C:/chromedriver/
       
          
      - shell: pwsh
        run: echo "CHROMEAPP=C:\Program Files\Google\Chrome\Application\chrome.exe" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      
      - shell: pwsh
        run: |
          $chrome_fullversion = (Get-Item $Env:CHROMEAPP).VersionInfo.FileVersion
          $chrome_majorversion = $chrome_fullversion.Split(".")[0]
          $response = Invoke-WebRequest "http://chromedriver.storage.googleapis.com/LATEST_RELEASE_$chrome_majorversion"
          $version = $response.Content
          echo "CHROMEDRIVER_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      
      - name: Setup Chrome Driver
        uses: nanasess/setup-chromedriver@master
        with:
          chromedriver-version: ${{ env.CHROMEDRIVER_VERSION }}
        
      - run: chromedriver --url-base=/wd/hub &

      - name: Run Selenium Test
        working-directory: ${{github.workspace}}/TestAssemblies
        run: |
          vstest.console.exe PartsUnlimited.SeleniumTests.exe /ResultsDirectory:"${{github.workspace}}\TestResults"
      
      - name: Upload Selenium Testresults
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: AutomationTestResults
          path: ${{github.workspace}}\TestResults
  # Deployiis:
  #   runs-on: self-hosted
  #   needs: [Build]
  #   steps:
  #   - name: Download Build Artifact
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: drop
  #       path: ${{github.workspace}}
        
  #   - name: Deploy to IIS
  #     run: |
  #       powershell Get-ChildItem -Path .\webapp -Recurse | Remove-Item -Force
  #       powershell expand-archive -path '*.zip' -destinationpath '.\webapp'
  #       powershell Copy-Item -Path ".\webapp\${{env.PACKAGE_TEMP_PATH}}\*" -Destination "C:\inetpub\PartsUnlimited" -Recurse -Force
     
  #   - name: DACPAC Deploy
  #     run: |
  #       & "C:\Program Files\Microsoft SQL Server\150\DAC\bin\SqlPackage.exe" /action:Publish /SourceFile:"C:\Users\canarys123\Desktop\PULREPO\SeleniumRepo\Database\Database\pul.dacpac" /TargetDatabaseName:PartsUnlimitedDB /TargetServerName:"githubvm\SQLEXPRESS"
    
  #   - name: Create Test Results Folder
  #     run: powershell new-item -Path . -Name 'TestResults' -ItemType "directory" -Force
      
  #   - name: Run Selenium Tests
  #     working-directory: ${{github.workspace}}/TestAssemblies
  #     run: |
  #       & "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe" PartsUnlimited.SeleniumTests.exe /ResultsDirectory:"${{github.workspace}}\TestResults"
        
  #   - name: Upload Testresults
  #     uses: actions/upload-artifact@v2
  #     if: ${{ always() }}
  #     with:
  #       name: TestResults
  #       path: ${{github.workspace}}\TestResults
